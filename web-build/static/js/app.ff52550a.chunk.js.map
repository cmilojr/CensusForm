{"version":3,"sources":["assets/LOGO.png","firebase.js","src/view/shared/TextInput.js","src/view/Form/InitFormScreen/index.js","src/view/shared/QuestionsType.js","src/view/shared/Pagination.js","src/view/Form/FormFirstPartScreen/index.js","src/view/Form/FormSecondPartScreen/index.js","src/view/Form/FormThirdPartScreen/index.js","src/view/Form/FormFourthPartScreen/index.js","src/view/Form/LastFormScreen/index.js","src/view/Form/FormStack.js","src/view/Auth/AuthScreen.js","src/view/Auth/RegisterScreen.js","src/view/shared/BackButton.js","src/view/FAQ/FAQScreen.js","src/view/Auth/AuthStack.js","src/main.js","App.js","assets/finished.png"],"names":["module","exports","app","TextInput","props","placeholder","leftIcon","label","value","onChangeText","editable","secureTextEntry","rightIcon","type","isError","onError","onRightIconPress","onLefttIconPress","multiline","autoCapitalize","_ref","useRef","useState","stateColor","setStateColor","message","error","setError","autoCompleteType","keyboardType","textContentType","_type","setType","useEffect","test","String","length","current","isFocused","styleInput","StyleSheet","create","style","alignItems","color","containerStyle","inputStyle","textAlign","paddingRight","leftIconContainerStyle","marginLeft","inputContainerStyle","height","width","marginTop","borderRadius","borderWidth","borderColor","errorMessage","name","size","onPress","labelStyle","textAlignVertical","selectionColor","placeholderTextColor","errorStyle","ref","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","code","auth","getAuth","readData","getDatabase","credentials","dbRef","console","log","get","child","updatedb","obj","db","update","signout","signOut","InitFormScreen","navigation","ECN","CFN","censusCredentials","setCensusCredentials","showErrorForm","Toast","show","text1","text2","checkFormCodes","then","snapshot","exists","navigate","catch","ScrollView","View","flex","flexDirection","backgroundColor","margin","padding","Text","fontWeight","fontSize","paddingTop","event","title","CheckAnswer","answerText","setAswer","isSelected","Pressable","marginHorizontal","marginBottom","CheckQuestion","question","answers","showOther","selectedAnswer","selected","setSelected","otherAnswer","setOtherAnswer","paddingBottom","marginVertical","map","key","val","TextQuestion","onChangeQuestion","valueQuestion","styles","container","justifyContent","position","bottom","selectedStyle","notSelectedStyle","Pagination","currentPage","checkFields","objectSave","routeSave","showToast","buttonStyle","FormFirstPartScreen","neighborhood","street","postalCode","phone","formFirstPart","setFormFirstPart","FormSecondPartScreen","householdMembers","maritalStatus","fullName","age","id","formSecondPart","setFormSecondPart","useLayoutEffect","undefined","FormThirdPartScreen","kindOfDwelling","houseAge","numberOfBedrooms","publicServices","formThirdPart","setFormThirdPart","FormFourthPartScreen","feedBack","formFourthPart","setFormFourthPart","LastFormScreen","Image","source","require","Stack","createStackNavigator","FormStack","Navigator","keyboardHandlingEnabled","Screen","component","options","headerShown","content","paddingVertical","AuthScreen","email","password","logginInfo","setLogginInfo","onSummit","signInWithEmailAndPassword","userCredential","user","contentContainerStyle","userName","fontColor","RegisterScreen","registerInfo","setRegisterInfo","createUserWithEmailAndPassword","setRegisterInfoInfo","goBack","BackButton","setBackAction","FAQScreen","setShowFAQ","showBack","AuthStack","windowWidth","Dimensions","windowHeight","Main","logginState","setLogginState","onAuthStateChanged","uid","NavigationContainer","App","SafeAreaView"],"mappings":"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","file":"static/js/app.ff52550a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/LOGO.81891b90.png\";","// Import the functions you need from the SDKs you need\nimport * as firebase from \"firebase/app\";\nimport {\n  getDatabase,\n  ref,\n  set,\n  child,\n  get,\n  update\n} from \"firebase/database\";\nimport {\n  getAuth,\n  createUserWithEmailAndPassword,\n  onAuthStateChanged,\n  signInWithEmailAndPassword,\n  signOut\n} from \"firebase/auth\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAXiU1FiNJHBpxawY7SsblCfFV5dRPH7rk\",\n  authDomain: \"bolumbia-e8c44.firebaseapp.com\",\n  databaseURL: \"https://bolumbia-e8c44-default-rtdb.firebaseio.com\",\n  projectId: \"bolumbia-e8c44\",\n  storageBucket: \"bolumbia-e8c44.appspot.com\",\n  messagingSenderId: \"1075351382092\",\n  appId: \"1:1075351382092:web:7e377c267cf064d34a6ce9\"\n};\n\n// Initialize Firebase\nlet app\nif (firebase.getApps().length === 0) {\n  app = firebase.initializeApp(firebaseConfig);\n} else {\n  app = firebase.app()\n}\n\nconst auth = getAuth()\nconst db = getDatabase(app);\n\nconst writeUserData = (route, obj) => {\n  set(ref(db, route), obj);\n}\n\nlet code\nconst codes = (ECN, CFN) => {\n  code = ECN + \"/\" + CFN\n}\n\nconst readData = (credentials) => {\n  const dbRef = ref(getDatabase());\n  console.log(credentials)\n  if (credentials) {\n    return get(child(dbRef, credentials))\n  }\n  return get(child(dbRef, code))\n}\n\nconst updatedb = (obj) => {\n  const db = getDatabase();\n  return update(ref(db, code), obj)\n}\n\nconst signout = () => {\n  const auth = getAuth();\n  return signOut(auth)\n}\n\nexport {\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  onAuthStateChanged,\n  writeUserData,\n  readData,\n  updatedb,\n  auth,\n  ref,\n  set,\n  db,\n  codes,\n  signout,\n}\n","import React, {useEffect, useState, useRef} from 'react';\nimport {StyleSheet} from 'react-native';\nimport {Input} from 'react-native-elements';\nimport Icons from 'react-native-vector-icons/MaterialIcons';\n\nexport const TextInput = (props) => {\n  const {\n    placeholder = '',\n    leftIcon,\n    label = '',\n    value = '',\n    onChangeText,\n    editable,\n    secureTextEntry = false,\n    rightIcon,\n    type,\n    isError = false,\n    onError,\n    onRightIconPress,\n    onLefttIconPress,\n    multiline,\n    autoCapitalize\n  } = props\n\n  const _ref = useRef(null);\n  const [stateColor, setStateColor] = useState(`gray`);\n  const [error, setError] = useState({\n    isError: false,\n    message: '',\n  });\n\n  const [_type, setType] = useState({\n    autoCompleteType: 'off',\n    keyboardType: 'default',\n    textContentType: 'none',\n  });\n\n  useEffect(() => {\n    switch (type) {\n      case 'email':\n        setType({\n          autoCompleteType: 'email',\n          keyboardType: 'email-address',\n          textContentType: 'emailAddress',\n        });\n        break;\n      case 'number':\n        setType({\n          autoCompleteType: 'tel',\n          keyboardType: 'number-pad',\n          textContentType: 'telephoneNumber',\n        });\n        break;\n\n      default:\n        setType({\n          autoCompleteType: 'off',\n          keyboardType: 'default',\n          textContentType: 'none',\n        });\n        break;\n    }\n  }, []);\n\n  useEffect(() => {\n    switch (type) {\n      case 'email':\n        if (value !== '' && value !== null) {\n          if (\n            /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(\n              value,\n            )\n          ) {\n            setError({\n              isError: false,\n              message: '',\n            });\n            onError && onError(false);\n            setStateColor(`gray`);\n          } else {\n            onError && onError(true);\n            setError({\n              isError: true,\n              message: 'No es un correo valido',\n            });\n            setStateColor('red');\n          }\n        }\n        break;\n      case 'password':\n        if (value !== '' && value !== null) {\n          if (String(value).length <= 7) {\n            setError({\n              isError: true,\n              message: 'Minimo 8 caracteres',\n            });\n            onError && onError(true);\n            setStateColor('red');\n          } else {\n            setError({\n              isError: false,\n              message: '',\n            });\n            onError && onError(false);\n            setStateColor('gray');\n          }\n        }\n        break;\n      default:\n        break;\n    }\n  }, [value]);\n\n  useEffect(() => {\n    if (isError) {\n      setError({\n        isError: true,\n        message: 'Campo requerido',\n      });\n      onError && onError(isError);\n      setStateColor('red');\n    } else {\n      setError({\n        isError: false,\n        message: '',\n      });\n      onError && onError(isError);\n      setStateColor(`gray`);\n    }\n  }, [isError === true]);\n\n  useEffect(() => {\n    if (_ref?.current?.isFocused() || value) {\n        setStateColor(`gray`);\n    } else {\n      //setStateColor(`${colors.text}80`);\n    }\n  }, [_ref?.current]);\n\n  const styleInput = StyleSheet.create({\n    style: {\n      alignItems: 'center',\n      color: stateColor,\n    },\n    containerStyle: {\n      alignItems: 'center',\n    },\n    inputStyle: {\n      color: stateColor,\n      alignItems: 'center',\n      textAlign: 'justify',\n      paddingRight: 20,\n    },\n    leftIconContainerStyle: {\n      marginLeft: 0,\n    },\n    inputContainerStyle: {\n      height: multiline ? 200 : 40,\n      width: '100%',\n      marginTop: 10,\n      textAlign: 'justify',\n      borderRadius: 7,\n      borderWidth: 1,\n      borderColor: stateColor,\n    },\n  });\n\n  return (\n    <Input\n      placeholder={placeholder}\n      autoCompleteType={_type.autoCompleteType}\n      keyboardType={_type.keyboardType}\n      textContentType={_type.textContentType}\n      label={label}\n      value={value}\n      errorMessage={error.isError ? error.message : ''}\n      onChangeText={onChangeText}\n      autoCapitalize={!autoCapitalize ? \"none\" : \"sentences\"}\n      editable={editable}\n      secureTextEntry={secureTextEntry}\n      multiline={multiline ? true : false}\n      leftIcon={\n        <Icons\n          name={leftIcon}\n          color={stateColor}\n          size={25}\n          style={{marginLeft: 10}}\n          onPress={onLefttIconPress}\n        />\n      }\n      rightIcon={\n        <Icons\n          name={rightIcon}\n          color={stateColor}\n          size={25}\n          onPress={onRightIconPress}\n        />\n      }\n      style={[styleInput.style]}\n      labelStyle={[{color: stateColor}]}\n      textAlignVertical=\"center\"\n      inputContainerStyle={styleInput.inputContainerStyle}\n      selectionColor={'gray'}\n      containerStyle={styleInput.containerStyle}\n      inputStyle={[styleInput.inputStyle]}\n      placeholderTextColor={stateColor}\n      leftIconContainerStyle={styleInput.leftIconContainerStyle}\n      errorStyle={{color: 'red'}}\n      ref={_ref}\n    />\n  );\n};\n","import React, { useState } from 'react'\nimport { View, Text, ScrollView } from 'react-native';\nimport { Button } from 'react-native-elements'\nimport { TextInput } from '../../shared/TextInput';\nimport {codes, readData, signout} from '../../../../firebase';\nimport Toast from 'react-native-toast-message';\n\nconst InitFormScreen = (props) => {\n    const { navigation } = props\n    const [censusCredentials, setCensusCredentials] = useState({ ECN: \"\", CFN: \"\" })\n\n    const showErrorForm = () => {\n        Toast.show({\n            type: 'error',\n            text1: 'Error: The codes ECN and CFN were not found.',\n            text2: 'Please check the information entered.'\n        });\n    }\n\n    const checkFormCodes = () => {\n        readData(censusCredentials.ECN+\"/\"+censusCredentials.CFN)        \n        .then((snapshot) => {\n            if (snapshot.exists()) {\n                codes(censusCredentials.ECN, censusCredentials.CFN)\n                navigation.navigate('FormFirstPart')\n            } else {\n                console.log(\"No data available\");\n                showErrorForm()\n            }\n        }).catch((error) => {\n            console.error(error);\n            showErrorForm()\n        });\n    }\n\n    return (\n        <ScrollView>\n            <View\n                style={{\n                    flex: 1,\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    backgroundColor: '#bce8b6'\n                }}>\n                <View style={{\n                    backgroundColor: 'white',\n                    margin: 20,\n                    padding: 20,\n                    borderRadius: 20,\n                }}>\n                    <Text style={{\n                        fontWeight: 'bold',\n                        fontSize: 30\n                    }}>Online Privacy Policy</Text>\n                    <Text style={{\n                        fontSize: 20,\n                        paddingTop: 20\n                    }}>\n                        The purpose of this policy is to explain how we handle information we collect during your visit to Census web sites. This policy does not apply to third-party web sites that you are able to access from our web sites, nor does it cover other Census Bureau information collection practices that do not happen on the Internet.\n\n                        We do not collect personally identifiable information (name, address, e-mail address, social security number, or other personal unique identifiers) or business identifiable information on our web sites unless we specifically advise you that we are doing so.\n                    </Text>\n\n                    <View style={{\n                        marginTop: 20\n                    }}>\n                        <Text style={{\n                            fontWeight: 'bold',\n                        }}>To initialize the Census App, please enter the CFN and ECN</Text>\n                        <TextInput\n                            placeholder=\"ECN\"\n                            type=\"text\"\n                            autoCapitalize={false}\n                            onChangeText={event => setCensusCredentials({ ...censusCredentials, ECN: event })}\n                            value={censusCredentials.ECN}\n                            rightIcon={'tag'}\n                        //onError={e => setIsErroruserName(e)}\n                        />\n                        <TextInput\n                            placeholder=\"CFN\"\n                            type=\"CFN\"\n                            autoCapitalize={false}\n                            onChangeText={event => setCensusCredentials({ ...censusCredentials, CFN: event })}\n                            value={censusCredentials.CFN}\n                            rightIcon={'insert-drive-file'}\n                        //onError={e => setIsErrorPassword(e)}\n                        />\n                    </View>\n                </View>\n                <View>\n                    <Button\n                        title='Start'\n                        onPress={() => {checkFormCodes()}}/>\n                    <Button\n                        containerStyle={{marginTop: 20}}\n                        title='Log Out'\n                        onPress={() => {\n                            signout()\n                                .then(() => {\n                                    console.log(\"Sign-out successful.\")\n                                }).catch((error) => {\n                                    // An error happened.\n                                    console.log(error)\n                                });\n                            }}/>\n                </View>    \n                <View style={{ height: 100 }} />\n            </View>\n        </ScrollView>\n    )\n}\n\nexport default InitFormScreen","import React, {useState, useEffect} from 'react'\nimport { Text, View, FlatList, Pressable } from 'react-native'\nimport { TextInput } from '../shared/TextInput'\nimport { Icon } from 'react-native-elements'\n\nconst CheckAnswer = (props) => {\n    const {onPress, answerText, setAswer, isSelected} = props\n    return (\n        <Pressable style={{\n            flexDirection: 'row',\n            alignItems: 'center',\n            marginHorizontal: 10,\n            marginBottom: 5,\n            borderWidth: 1,\n            borderColor: 'gray',\n            borderRadius: 6,\n            padding: 10\n        }}\n        onPress={() => setAswer(answerText)}>\n            <Icon\n                name={!isSelected ? \"radio-button-unchecked\" : \"radio-button-checked\"}\n                onPress={onPress}\n                />\n            <Text style={{\n                marginLeft: 10,\n                fontSize: 19\n            }}>{answerText}</Text>\n        </Pressable>\n    )\n}\n\nexport const CheckQuestion = (props) => {\n    const {question, answers, setAswer, showOther, selectedAnswer} = props\n    const [selected, setSelected] = useState(\"\")\n    const [otherAnswer, setOtherAnswer] = useState(\"\")\n    \n    useEffect(() => {\n        setAswer(selected)\n    }, [selected])\n\n    useEffect(() => {\n        setSelected(\"\")\n        setAswer(otherAnswer)\n    }, [otherAnswer])\n\n    useEffect(() => {\n        setSelected(selectedAnswer)\n    }, [])\n\n    return (\n        <View style={{\n            marginHorizontal: 20,\n            borderWidth: 1,\n            borderRadius: 10,\n            backgroundColor: \"white\",\n            borderColor: '#a3a2a0',\n            paddingBottom: 10,\n            marginBottom: 10,\n        }}>\n            <Text style={{\n                marginHorizontal: 20,\n                marginTop: 10,\n                fontSize: 15,\n                fontWeight: 'bold',\n                marginVertical: 5,\n            }}>\n                {question}\n            </Text>\n            {answers.map((props,key) => {\n                return (\n                    <CheckAnswer \n                        answerText={props}\n                        setAswer={setSelected}\n                        isSelected={answers[key] === selected || answers[key] === selectedAnswer}\n                        />\n                )\n            })}\n            {\n                showOther && \n                    <TextInput \n                    onChangeText={(val) => setOtherAnswer(val)}\n                    placeholder={\"Other answer\"}\n                    value={selected === \"\" ? otherAnswer : \"\"}\n                    type=\"text\" \n                    />\n            }\n        </View>\n    )\n}\n\nexport const TextQuestion = (props) => {\n    const {\n        question, \n        placeholder, \n        onChangeQuestion, \n        valueQuestion, \n        multiline\n    } = props\n    return (\n        <View style={{\n            marginHorizontal: 20,\n            borderWidth: 1,\n            borderRadius: 10,\n            backgroundColor: \"white\",\n            borderColor: '#a3a2a0',\n            marginBottom: 10,\n        }}>\n            <Text style={{\n                marginHorizontal: 20,\n                marginTop: 10,\n                fontSize: 15,\n                fontWeight: 'bold'\n            }}>\n                {question}\n            </Text>\n            <TextInput \n                onChangeText={onChangeQuestion}\n                placeholder={placeholder}\n                value={valueQuestion}\n                type=\"text\" \n                multiline={multiline}\n                />\n        </View>\n    )\n}\n","import React from 'react'\nimport { View, StyleSheet } from 'react-native'\nimport { Button } from 'react-native-elements'\nimport { updatedb } from '../../../firebase';\n\nconst Pagination = (props) => {\n    const { \n        currentPage, \n        navigation, \n        checkFields, \n        routeSave, \n        objectSave,\n        showToast,\n    } = props\n\n    return (\n        <View style={styles.container}>\n            <Button\n                buttonStyle={currentPage === 1 ? styles.selectedStyle : styles.notSelectedStyle}\n                title='1'\n                onPress={() => {\n                    if (checkFields()) {\n                        updatedb(objectSave)\n                            .then(() => {\n                                currentPage !== 1 && navigation.navigate(\"FormFirstPart\")\n                            })\n                            .catch((error) => {\n                                showToast()\n                            });\n                    } else {\n                        showToast()\n                    }\n                }} />\n            <Button\n                buttonStyle={currentPage === 2 ? styles.selectedStyle : styles.notSelectedStyle}\n                title='2'\n                onPress={() => {\n                    if (checkFields()) {\n                        updatedb(objectSave)\n                            .then(() => {\n                                currentPage !== 2 && navigation.navigate(\"FormSecondPart\")\n                            })\n                            .catch((error) => {\n                                showToast()\n                            });\n                    } else {\n                        showToast()\n                    }   \n                }} />\n            <Button\n                buttonStyle={currentPage === 3 ? styles.selectedStyle : styles.notSelectedStyle}\n                title='3'\n                onPress={() => {\n                    if (checkFields()) {\n                        updatedb(objectSave)\n                            .then(() => {\n                                currentPage !== 3 && navigation.navigate(\"FormThirdPart\")\n                            })\n                            .catch((error) => {\n                                showToast()\n                            });\n                    } else {\n                        showToast()\n                    }\n                }} />\n            <Button\n                buttonStyle={currentPage === 4 ? styles.selectedStyle : styles.notSelectedStyle}\n                title='4'\n                onPress={() => {\n                    if (checkFields()) {\n                        updatedb(objectSave)\n                            .then(() => {\n                                currentPage !== 4 && navigation.navigate(\"FormFourthPart\")\n                            })\n                            .catch((error) => {\n                                showToast()\n                            });\n                    } else {\n                        showToast()\n                    }\n                }} />\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        justifyContent: 'space-around',\n        flexDirection: 'row',\n        position: 'absolute',\n        bottom: 100,\n        width: '50%',\n    },\n    selectedStyle: {\n\n    },\n    notSelectedStyle: {\n        backgroundColor: 'gray',\n    }\n})\n\nexport default Pagination","import React, { useState, useEffect } from 'react'\nimport { View, Text, ScrollView } from 'react-native'\nimport { TextQuestion } from '../../shared/QuestionsType'\nimport Pagination from '../../shared/Pagination'\nimport Toast from 'react-native-toast-message';\nimport {readData} from '../../../../firebase';\n\nconst FormFirstPartScreen = (props) => {\n    const [formFirstPart, setFormFirstPart] = useState({\n        neighborhood: \"\",\n        street: \"\",\n        postalCode: \"\",\n        phone: \"\"\n    })\n\n    const showToast = () => {\n        Toast.show({\n            type: 'error',\n            text1: 'Error',\n            text2: 'Please fill the empty fields.'\n        });\n    }\n\n    useEffect(() => {\n        readData()        \n            .then((snapshot) => {\n                if (snapshot.exists()) {\n                    if(snapshot.val().formFirstPart){\n                        setFormFirstPart(snapshot.val().formFirstPart)\n                    }\n                return(snapshot.val())\n                } else {\n                console.log(\"No data available\");\n                }\n            }).catch((error) => {\n                console.error(error);\n            });\n    }, [])\n\n    const checkFields = () => {\n        return formFirstPart.neighborhood !== \"\" && \n        formFirstPart.street !== \"\" && \n        formFirstPart.postalCode !== \"\" && \n        formFirstPart.phone !== \"\"\n    }\n\n    return (\n        <View\n            style={{\n                flex: 1,\n                flexDirection: 'column',\n                alignItems: 'center',\n                backgroundColor: '#bce8b6'\n            }}>\n            <Text style={{\n                fontWeight: 'bold',\n                fontSize: 32,\n                margin: 20\n            }}>House Information</Text>\n            <ScrollView style={{\n                width: '100%',\n            }}>\n                <TextQuestion\n                    question=\"Neighborhood\"\n                    placeholder=\"e.g. Los Santos\"\n                    onChangeQuestion={(neighborhood) => setFormFirstPart({ ...formFirstPart, neighborhood })}\n                    valueQuestion={formFirstPart.neighborhood} />\n                <TextQuestion\n                    question=\"Street Address\"\n                    placeholder=\"e.g. 600 N Clark St\"\n                    onChangeQuestion={(street) => setFormFirstPart({ ...formFirstPart, street })}\n                    valueQuestion={formFirstPart.street} />\n                <TextQuestion\n                    question=\"Poscal Code\"\n                    placeholder=\"e.g. 50204\"\n                    onChangeQuestion={(postalCode) => setFormFirstPart({ ...formFirstPart, postalCode })}\n                    valueQuestion={formFirstPart.postalCode} />\n                <TextQuestion\n                    question=\"Phone number\"\n                    placeholder=\"e.g. 5628692\"\n                    onChangeQuestion={(phone) => setFormFirstPart({ ...formFirstPart, phone })}\n                    valueQuestion={formFirstPart.phone} />\n                <View style={{\n                    height: 150\n                }} />\n            </ScrollView>\n\n            <Pagination \n                currentPage={1} \n                navigation={props.navigation} \n                checkFields={checkFields} \n                showToast={showToast}\n                objectSave={{\n                    formFirstPart:formFirstPart\n                }}/>\n        </View>\n    )\n}\n\nexport default FormFirstPartScreen","import React, {useState, useEffect, useLayoutEffect} from 'react'\nimport { View, Text, ScrollView} from 'react-native'\nimport {CheckQuestion, TextQuestion} from '../../shared/QuestionsType'\nimport Pagination from '../../shared/Pagination'\nimport {readData} from '../../../../firebase';\nimport Toast from 'react-native-toast-message';\n\nconst FormSecondPartScreen = (props) => {\n    const [formSecondPart, setFormSecondPart] = useState({\n        householdMembers: \"\",\n        maritalStatus: \"\",\n        fullName: \"\",\n        age: \"\",\n        id: \"\",\n    })\n\n    const showToast = () => {\n        Toast.show({\n            type: 'error',\n            text1: 'Error',\n            text2: 'Please fill the empty fields.'\n        });\n    }\n\n    const checkFields = () => {\n        return formSecondPart.householdMembers !== \"\" && \n        formSecondPart.maritalStatus !== \"\" && \n        formSecondPart.fullName !== \"\" && \n        formSecondPart.id !== \"\" && \n        formSecondPart.age !== \"\"\n    }\n\n    useLayoutEffect(() => {\n        readData()        \n            .then((snapshot) => {\n                if (snapshot.exists()) {\n                    if(snapshot.val().formSecondPart !== undefined) {\n                        setFormSecondPart(snapshot.val().formSecondPart)\n                    }\n                } else {\n                console.log(\"No data available\");\n                }\n            }).catch((error) => {\n                console.error(error);\n            });\n    }, [])\n\n    return (\n        <View \n        style={{\n            flex: 1, \n            flexDirection: 'column', \n            alignItems: 'center',\n            backgroundColor: '#bce8b6'\n        }}>\n            <Text style={{\n                fontWeight: 'bold',\n                fontSize: 32,\n                margin: 20\n            }}>Home Members</Text>\n            <ScrollView style={{\n                width: '100%',\n            }}>\n                <TextQuestion \n                    question=\"Number of household members\"\n                    placeholder=\"e.g. 3\" \n                    onChangeQuestion={householdMembers => setFormSecondPart({...formSecondPart, householdMembers})} \n                    valueQuestion={formSecondPart.householdMembers}/>\n                <TextQuestion \n                    question=\"Full name\"\n                    placeholder=\"e.g. Yolanda Squatpump\" \n                    onChangeQuestion={fullName => setFormSecondPart({...formSecondPart, fullName})} \n                    valueQuestion={formSecondPart.fullName}/>\n                <TextQuestion \n                    question=\"Age\"\n                    placeholder=\"e.g. 24\" \n                    onChangeQuestion={age => setFormSecondPart({...formSecondPart, age})} \n                    valueQuestion={formSecondPart.age}/>\n                <TextQuestion \n                    question=\"ID number\"\n                    placeholder=\"e.g. 241020303\" \n                    onChangeQuestion={id => setFormSecondPart({...formSecondPart, id})} \n                    valueQuestion={formSecondPart.id}/>\n                <CheckQuestion \n                    setAswer={maritalStatus => setFormSecondPart({...formSecondPart, maritalStatus})} \n                    question=\"Marital Status\"\n                    selectedAnswer={formSecondPart.maritalStatus}\n                    answers={[\n                        \"Single\",\n                        \"Married\",\n                        \"Concubinage / Consensual Union Widowed\",\n                        \"Separated\",\n                        \"Divorced\",\n                        \"Do not know, no answer\",\n                    ]} \n                    />\n                <View style={{\n                    height: 150\n                }}/>\n            </ScrollView>\n\n            <Pagination \n                currentPage={2} \n                navigation={props.navigation} \n                checkFields={checkFields}\n                showToast={showToast}\n                objectSave={{\n                    formSecondPart:formSecondPart\n                }}/>\n        </View>\n    )\n}\n\nexport default FormSecondPartScreen","import React, {useState, useEffect} from 'react'\nimport { View, Text, ScrollView} from 'react-native'\nimport Pagination from '../../shared/Pagination'\nimport {CheckQuestion, TextQuestion} from '../../shared/QuestionsType'\nimport {readData} from '../../../../firebase';\nimport Toast from 'react-native-toast-message';\n\nconst FormThirdPartScreen = (props) => {\n    const [formThirdPart, setFormThirdPart] = useState({\n        kindOfDwelling: \"\",\n        houseAge: \"\",\n        numberOfBedrooms: \"\",\n        publicServices: \"\",\n    })\n\n    const showToast = () => {\n        Toast.show({\n            type: 'error',\n            text1: 'Error',\n            text2: 'Please fill the empty fields.'\n        });\n    }\n\n    const checkFields = () => {\n        return formThirdPart.kindOfDwelling !== \"\" &&\n        formThirdPart.houseAge !== \"\" &&\n        formThirdPart.numberOfBedrooms !== \"\" &&\n        formThirdPart.publicServices !== \"\"\n    }\n\n    useEffect(() => {\n        readData()        \n            .then((snapshot) => {\n                if (snapshot.exists()) {\n                    if(snapshot.val().formThirdPart !== undefined){\n                        setFormThirdPart(snapshot.val().formThirdPart)\n                    }\n                return(snapshot.val())\n                } else {\n                console.log(\"No data available\");\n                }\n            }).catch((error) => {\n                console.error(error);\n            });\n    }, [])\n\n    return (\n        <View \n            style={{\n                flex: 1, \n                flexDirection: 'column', \n                alignItems: 'center',\n                backgroundColor: '#bce8b6'\n            }}>\n            <Text style={{\n                fontWeight: 'bold',\n                fontSize: 32,\n                margin: 20\n            }}>Dwelling Information</Text>\n            <ScrollView style={{\n                width: '100%',\n            }}>\n                <CheckQuestion \n                    setAswer={(kindOfDwelling) => setFormThirdPart({...formThirdPart, kindOfDwelling})}\n                    question=\"Type of dwelling\"\n                    selectedAnswer={formThirdPart.kindOfDwelling}\n                    answers={[\n                        \"Independent housing\",\n                        \"Apartment\",\n                        \"Room in collective housing\",\n                        \"Worker camps\",\n                        \"Student residence\",\n                        \"Nursing home\",\n                        \"Schools / boarding schools\",\n                        \"Religious order\",\n                        \"Cooperation organization\",\n                        \"Do not know, no answer\"\n                    ]} \n                    />\n                <CheckQuestion \n                    question=\"How old is the house?\"\n                    setAswer={(houseAge) => setFormThirdPart({...formThirdPart, houseAge})}\n                    selectedAnswer={formThirdPart.houseAge}\n                    answers={[\n                        \"Less than 6 years\",\n                        \"Between 6 and 10 years\",\n                        \"Between 11 and 15 years\",\n                        \"Between 16 and 20 years\",\n                        \"Between 21 and 25 years\",\n                        \"More than 25 years\",\n                        \"Do not know, no answer\",\n                    ]} \n                    />\n                <TextQuestion\n                    question=\"Number of bedrooms\"\n                    placeholder=\"e.g. 2\" \n                    onChangeQuestion={(numberOfBedrooms) => setFormThirdPart({ ...formThirdPart, numberOfBedrooms })}\n                    valueQuestion={formThirdPart.numberOfBedrooms} />\n                <CheckQuestion \n                    question=\"Access to public services?\"\n                    setAswer={(publicServices) => setFormThirdPart({...formThirdPart, publicServices})}\n                    selectedAnswer={formThirdPart.publicServices}\n                    answers={[\n                        \"Yes\",\n                        \"No\",\n                    ]} \n                    />\n                <View style={{\n                    height: 150\n                }}/>\n            </ScrollView>\n            <Pagination \n                currentPage={3} \n                navigation={props.navigation} \n                checkFields={checkFields} \n                showToast={showToast}\n                objectSave={{\n                    formThirdPart:formThirdPart\n                }}/>\n        </View>\n    )\n}\n\nexport default FormThirdPartScreen","import React, { useState, useEffect } from 'react'\nimport { View, Text } from 'react-native'\nimport Pagination from '../../shared/Pagination'\nimport { TextQuestion } from '../../shared/QuestionsType'\nimport {readData} from '../../../../firebase';\nimport Toast from 'react-native-toast-message';\nimport { Button } from 'react-native-elements'\n\nconst FormFourthPartScreen = (props) => {\n    const [formFourthPart, setFormFourthPart] = useState({\n        feedBack: \"\"\n    })\n    const checkFields = () => {\n        return formFourthPart.feedBack !== \"\"\n    }\n\n    const showToast = () => {\n        Toast.show({\n            type: 'error',\n            text1: 'Error',\n            text2: 'Please fill the empty fields.'\n        });\n    }\n    \n    useEffect(() => {\n        readData()        \n            .then((snapshot) => {\n                if (snapshot.exists()) {\n                    if(snapshot.val().formFourthPart) {\n                        setFormFourthPart(snapshot.val().formFourthPart)\n                    }\n                return(snapshot.val())\n                } else {\n                console.log(\"No data available\");\n                }\n            }).catch((error) => {\n                console.error(error);\n            });\n    }, [])\n\n    return (\n        <View\n            style={{\n                flex: 1,\n                flexDirection: 'column',\n                alignItems: 'center',\n                backgroundColor: '#bce8b6'\n            }}>\n            <Text style={{\n                fontWeight: 'bold',\n                fontSize: 32,\n                margin: 20\n            }}>Feedback</Text>\n\n            <TextQuestion\n                question=\"Please entrer feedback about the census experience\"\n                placeholder=\"e.g. Amazing experience\"\n                onChangeQuestion={(feedBack) => setFormFourthPart({feedBack})}\n                valueQuestion={formFourthPart.feedBack}\n                multiline={true} />\n            <Button\n                title='Finish'\n                onPress={() => { props.navigation.navigate(\"LastForm\") }} />\n            <Pagination\n                currentPage={4}\n                navigation={props.navigation}\n                checkFields={checkFields}\n                showToast={showToast}\n                objectSave={{\n                    formFourthPart: formFourthPart\n                }} />\n        </View>\n    )\n}\n\nexport default FormFourthPartScreen","import React from 'react'\nimport { View, Text, Image } from 'react-native';\nimport { Button } from 'react-native-elements'\nimport { signout } from '../../../../firebase';\nimport Toast from 'react-native-toast-message';\n\nconst LastFormScreen = (props) => {\n\n    const showErrorForm = () => {\n        Toast.show({\n            type: 'error',\n            text1: 'Error: The codes ECN and CFN were not found.',\n            text2: 'Please check the information entered.'\n        });\n    }\n\n    return (\n\n        <View\n            style={{\n                flex: 1,\n                flexDirection: 'column',\n                alignItems: 'center',\n                backgroundColor: '#bce8b6',\n                height: '100%'\n            }}>\n            <View style={{\n                backgroundColor: 'white',\n                margin: 20,\n                padding: 20,\n                borderRadius: 20,\n            }}>\n                <Text style={{\n                    fontWeight: 'bold',\n                    fontSize: 30\n                }}>Form completed</Text>\n\n                <View style={{\n                    marginTop: 20\n                }}>\n                    <Text style={{\n                        fontWeight: 'bold',\n                    }}>You have successfully completed the census form, thank you for your cooperation.</Text>\n                    <Image\n                        style={{\n                            width: 250,\n                            height: 150,\n                        }}\n                        source={require('../../../../assets/finished.png')}\n                    />\n                </View>\n            </View>\n            <View>\n                <Button\n                    containerStyle={{ marginTop: 20 }}\n                    title='Log Out'\n                    onPress={() => {\n                        signout()\n                            .then(() => {\n                                console.log(\"Sign-out successful.\")\n                            }).catch((error) => {\n                                // An error happened.\n                                console.log(error)\n                            });\n                    }} />\n            </View>\n            <View style={{ height: 100 }} />\n        </View>\n    )\n}\n\nexport default LastFormScreen","import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport InitFormScreen from './InitFormScreen';\nimport FormFirstPartScreen from './FormFirstPartScreen/index';\nimport FormSecondPartScreen from './FormSecondPartScreen/index'\nimport FormThirdPartScreen from './FormThirdPartScreen/index'\nimport FormFourthPartScreen from './FormFourthPartScreen/index'\nimport LastFormScreen from './LastFormScreen'\n\nconst Stack = createStackNavigator();\n\nconst FormStack = () => {\n  return (\n    <Stack.Navigator keyboardHandlingEnabled>\n      <Stack.Screen\n        name=\"InitForm\"\n        component={InitFormScreen}\n        options={{\n          headerShown: false,\n        }}\n      />\n      <Stack.Screen\n        name=\"FormFirstPart\"\n        component={FormFirstPartScreen}\n        options={{\n          headerShown: false,\n        }}\n      />\n      <Stack.Screen\n        name=\"FormSecondPart\"\n        component={FormSecondPartScreen}\n        options={{\n          headerShown: false,\n        }}\n      />\n      <Stack.Screen\n        name=\"FormThirdPart\"\n        component={FormThirdPartScreen}\n        options={{\n          headerShown: false,\n        }}\n      />\n      <Stack.Screen\n        name=\"FormFourthPart\"\n        component={FormFourthPartScreen}\n        options={{\n          headerShown: false,\n        }}\n      />\n      <Stack.Screen\n        name=\"LastForm\"\n        component={LastFormScreen}\n        options={{\n          headerShown: false,\n        }}\n      />\n    </Stack.Navigator>\n  );\n};\n\nexport default FormStack;\n","import React, { useState } from 'react'\nimport { View, StyleSheet, Image } from 'react-native'\nimport { Button } from 'react-native-elements'\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view'\nimport { TextInput } from '../shared/TextInput'\nimport { signInWithEmailAndPassword, auth } from '../../../firebase';\nimport Toast from 'react-native-toast-message';\n\nconst AuthScreen = (props) => {\n    const [logginInfo, setLogginInfo] = useState({ email: '', password: '' });\n\n    const showError = (message) => {\n        Toast.show({\n            type: 'error',\n            text1: 'Error: The codes ECN and CFN were not found.',\n            text2: message\n        });\n    }\n\n    const onSummit = () => {\n        signInWithEmailAndPassword(auth, logginInfo.email, logginInfo.password)\n            .then((userCredential) => {\n                // Signed in\n                const user = userCredential.user;\n                \n            })\n            .catch((error) => {\n                const errorCode = error.code;\n                const errorMessage = error.message;\n                showError(errorMessage)\n            });\n    }\n\n    return (\n        <KeyboardAwareScrollView contentContainerStyle={styles.container}>\n            <View style={styles.content}>\n                <View style={{\n                    backgroundColor: 'white',\n                    margin: 20,\n                    padding: 20,\n                    borderRadius: 20,\n                }}>\n                    <View style={{\n                        alignItems: 'center'\n                    }}>\n                        <Image\n                            style={{\n                                width: 250,\n                                height: 150,\n                            }}\n                            source={require('../../../assets/LOGO.png')}\n                        />\n                    </View>\n\n                    <TextInput\n                        placeholder=\"Email\"\n                        type=\"text\"\n                        autoCapitalize={false}\n                        onChangeText={event => setLogginInfo({ ...logginInfo, userName: event })}\n                        value={logginInfo.userName}\n                        rightIcon={'tag'}\n                    //onError={e => setIsErroruserName(e)}\n                    />\n                    <TextInput\n                        placeholder=\"Password\"\n                        type=\"password\"\n                        autoCapitalize={false}\n                        secureTextEntry={true}\n                        onChangeText={event => setLogginInfo({ ...logginInfo, password: event })}\n                        value={logginInfo.password}\n                        rightIcon={'insert-drive-file'}\n                    //onError={e => setIsErrorPassword(e)}\n                    />\n                    <Button\n                        title=\"Login\"\n                        onPress={() => onSummit()}\n                        containerStyle={{ height: 40 }}\n                        fontColor=\"textBgPrimary\"\n                    />\n                </View>\n                <View style={{\n                    flexDirection: 'row',\n                    justifyContent: 'center',\n                }}>\n                    <Button\n                        title=\"Sign Up\"\n                        onPress={() => props.navigation.navigate(\"RegisterScreen\")}\n                        containerStyle={{ height: 40, margin: 20 }}\n                        fontColor=\"textBgPrimary\"\n                    />\n                    {/* <Button\n                        title=\"FAQ\"\n                        onPress={() => setShowFAQ(true)}\n                        containerStyle={{height: 40, margin: 20}}\n                        fontColor=\"textBgPrimary\"\n                    />\n                    <Button\n                        title=\"Heling Desk\"\n                        onPress={() => setShowHD(true)}\n                        containerStyle={{height: 40, margin: 20}}\n                        fontColor=\"textBgPrimary\"\n                    /> */}\n                </View>\n            </View>\n        </KeyboardAwareScrollView>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        justifyContent: 'center',\n        alignItems: 'center',\n        flex: 1,\n        backgroundColor: '#bce8b6'\n    },\n    content: {\n        width: '100%',\n        justifyContent: 'space-around',\n        paddingVertical: 1\n    }\n})\n\nexport default AuthScreen","import React, { useState } from 'react'\nimport { Text, View, StyleSheet, Image } from 'react-native'\nimport { Button } from 'react-native-elements'\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view'\nimport { TextInput } from '../shared/TextInput'\nimport { auth, createUserWithEmailAndPassword } from \"../../../firebase\";\nimport Toast from 'react-native-toast-message';\n\nconst RegisterScreen = (props) => {\n    const [registerInfo, setRegisterInfo] = useState({ email: '', password: '' });\n\n    const showError = (message) => {\n        Toast.show({\n            type: 'error',\n            text1: 'Error: The codes ECN and CFN were not found.',\n            text2: message\n        });\n    }\n\n    const onSummit = () => {\n        createUserWithEmailAndPassword(auth, registerInfo.email, registerInfo.password)\n            .then((userCredential) => {\n                // Signed in\n                const user = userCredential.user;\n                setRegisterInfoInfo({ email: '', password: '' })\n            })\n            .catch((error) => {\n                const errorCode = error.code;\n                const errorMessage = error.message;\n                showError(errorMessage)\n            })\n        props.navigation.goBack()\n    }\n\n    return (\n        <KeyboardAwareScrollView contentContainerStyle={styles.container}>\n            <View style={styles.content}>\n                <View style={{\n                    backgroundColor: 'white',\n                    margin: 20,\n                    padding: 20,\n                    borderRadius: 20,\n                }}>\n                    <View style={{\n                        alignItems: 'center'\n                    }}>\n                        <Image\n                            style={{\n                                width: 250,\n                                height: 150,\n                            }}\n                            source={require('../../../assets/LOGO.png')}\n                        />\n                    </View>\n\n                    <TextInput\n                        placeholder=\"Email\"\n                        type=\"text\"\n                        autoCapitalize={false}\n                        onChangeText={event => setRegisterInfo({ ...registerInfo, email: event })}\n                        value={registerInfo.email}\n                        rightIcon={'tag'}\n                    //onError={e => setIsErroruserName(e)}\n                    />\n                    <TextInput\n                        placeholder=\"Password\"\n                        type=\"password\"\n                        autoCapitalize={false}\n                        onChangeText={event => setRegisterInfo({ ...registerInfo, password: event })}\n                        value={registerInfo.password}\n                        rightIcon={'insert-drive-file'}\n                    //onError={e => setIsErrorPassword(e)}\n                    />\n                    <Button\n                        title=\"Register\"\n                        onPress={() => onSummit()}\n                        containerStyle={{ height: 40 }}\n                        fontColor=\"textBgPrimary\"\n                    />\n                    <Button\n                        title=\"Back\"\n                        onPress={() => props.navigation.goBack()}\n                        containerStyle={{ height: 40, marginTop: 20 }}\n                        fontColor=\"textBgPrimary\"\n                    />\n                </View>\n            </View>\n        </KeyboardAwareScrollView>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        justifyContent: 'center',\n        alignItems: 'center',\n        flex: 1,\n        backgroundColor: '#bce8b6'\n    },\n    content: {\n        width: '100%',\n        justifyContent: 'space-around',\n        paddingVertical: 1\n    }\n})\n\nexport default RegisterScreen","import React from 'react'\nimport { View, StyleSheet } from 'react-native'\nimport { Button } from 'react-native-elements'\n\nconst BackButton = (props) => {\n    const {setBackAction} = props\n\n    return (\n        <View style={styles.container}>\n            <Button \n                title='Back'\n                onPress={() => setBackAction(false)}/>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        justifyContent: 'space-around', \n        flexDirection: 'row', \n        position: 'absolute',\n        bottom: 100,\n        width: '50%',\n    },\n})\n\nexport default BackButton","import React from 'react'\nimport { View, Text, ScrollView} from 'react-native'\nimport {TextQuestion} from '../shared/QuestionsType'\nimport BackButton from '../shared/BackButton'\n\nconst FAQScreen = (props) => {\n    const {setShowFAQ, showBack} = props\n    return (\n        <View \n            style={{\n                flex: 1, \n                flexDirection: 'column', \n                alignItems: 'center',\n                backgroundColor: '#bce8b6'\n            }}>\n            <Text style={{\n                fontWeight: 'bold',\n                fontSize: 32,\n                margin: 20\n            }}>Frequently Asked Questions </Text>\n            <ScrollView style={{\n                width: '100%',\n            }}>\n                <TextQuestion \n                    question=\"Why my participation is important?\"\n                    valueQuestion=\"Your answers help produce accurate, reliable statistics on employment, infrastructure, education, economic opportunities, and other important characteristics of your community. This information helps policymakers, local officials, companies, and organizations to understand and assess the resources and needs of people, places, and businesses across the country. None of this would be possible without your participation.\"\n                    editable={false}\n                    multiline={true}/>\n                <TextQuestion \n                    question=\"How can I complete this survey?\"\n                    valueQuestion=\"In addition to conducting the 2020 Census, the Census Bureau oversees many surveys that are generally completed in-person, by mail, online, or by telephone. For more information about completing a particular survey, you can search the Census list of surveys and read more about what your options are for responding.\"\n                    editable={false}\n                    multiline={true}/>\n                <TextQuestion \n                    question=\"How my answers will be used?\"\n                    valueQuestion=\"All information that you provide in a Census Bureau survey or census is used exclusively to create accurate, relevant statistics about the nation’s people, places, and economy. These statistics help inform elected officials about communities and businesses across Bolumbia.\"\n                    editable={false}\n                    multiline={true}/>\n                <TextQuestion \n                    question=\"Whom do I contact if I have additional questions, recommendations, or issues?\"\n                    valueQuestion=\"If you have questions regarding the Census, data products, or general information call the Census Customer Service Center at 1-800-923-8282.\n\n                    If you need assistance in verifying a Census Bureau survey mailing, call, or in-person interview, contact the Census Bureau Regional Office associated with your state.\n                    \n                    If you have questions regarding data policies or a FOIA request, contact the Policy Office.\n                    \n                    If you have additional issues or concerns that are not addressed above, please contact the Office of the Respondent Advocate.\"\n                    editable={false}\n                    multiline={true}/>\n                <View style={{\n                    height: 150\n                }}/>\n            </ScrollView>\n            {\n                showBack && <BackButton setBackAction={setShowFAQ} />\n            }\n            \n        </View>\n    )\n}\n\nexport default FAQScreen","import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport AuthScreen from './AuthScreen';\nimport RegisterScreen from './RegisterScreen';\nimport FAQScreen from '../FAQ/FAQScreen';\nimport ChatBoxScreen from '../ChatBox/ChatBoxScreen';\nimport FormStack from '../Form/FormStack';\nconst Stack = createStackNavigator();\n\nconst AuthStack = () => {\n    return (\n        <Stack.Navigator keyboardHandlingEnabled>\n            <Stack.Screen\n                name=\"AuthScreen\"\n                component={AuthScreen}\n                options={{\n                    headerShown: false,\n                }}\n            />\n            <Stack.Screen\n                name=\"RegisterScreen\"\n                component={RegisterScreen}\n                options={{\n                    headerShown: false,\n                }}\n            />\n            <Stack.Screen\n                name=\"FAQScreen\"\n                component={FAQScreen}\n                options={{\n                    headerShown: false,\n                }}\n            />\n        </Stack.Navigator>\n    );\n};\n\nexport default AuthStack;\n","import React, { useState } from 'react';\nimport { View, Dimensions } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport FormStack from './view/Form/FormStack'\nimport AuthStack from './view/Auth/AuthStack';\nimport { onAuthStateChanged, auth } from '../firebase';\nconst windowWidth = Dimensions.get('window').width;\nconst windowHeight = Dimensions.get('window').height;\n\nconst Main = () => {\n    const [logginState, setLogginState] = useState(false)\n    onAuthStateChanged(auth, (user) => {\n        if (user) {\n            // User is signed in, see docs for a list of available properties\n            // https://firebase.google.com/docs/reference/js/firebase.User\n            const uid = user.uid;\n            setLogginState(true)\n        } else {\n            // User is signed out\n            setLogginState(false)\n        }\n    });\n\n    return (\n        <NavigationContainer>\n            <View style={{\n                width: windowWidth,\n                height: windowHeight,\n            }}>\n                {logginState ?\n                    <FormStack />\n                    :\n                    <AuthStack />\n                }\n            </View>\n        </NavigationContainer>\n    );\n}\n\nexport default Main","import React from 'react';\nimport {SafeAreaView,SafeAreaProvider} from 'react-native-safe-area-context';\nimport Main from './src/main';\nimport Toast from 'react-native-toast-message';\n\nexport default function App() {\n  return (\n    <SafeAreaProvider>\n      <SafeAreaView>\n        <Main/>\n        <Toast/>\n      </SafeAreaView>\n    </SafeAreaProvider>\n  );\n}","module.exports = __webpack_public_path__ + \"static/media/finished.cb596494.png\";"],"sourceRoot":""}